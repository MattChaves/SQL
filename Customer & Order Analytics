--In this SQL, I'm answering specific questions about the data from a specific database. Some of the data was a bit messy so that's taken into account when querying it.

--How many orders were placed in January?
SELECT COUNT(orderID) FROM BIT_DB.JanSales WHERE length(orderID) = 6 AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales WHERE length(orderID) = 6 AND orderID <> 'Order ID' AND Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum 
FROM BIT_DB.customers cust 
INNER JOIN BIT_DB.FebSales feb on cust.order_id = feb.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, min(price) as price FROM BIT_DB.JanSales;

--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT distinct Product, sum(quantity)*price as Revenue FROM BIT_DB.JanSales GROUP BY Product Order By Revenue;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, quantity, sum(quantity)*price as Revenue FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101' GROUP BY Product ORDER BY Revenue;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum) as Customers, avg(quantity*price) as Spending from BIT_DB.FebSales feb 
LEFT JOIN BIT_DB.customers cust
on feb.orderid = cust.order_id
WHERE feb.quantity > 2 AND length(orderid) = 6 
AND orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, sum(Quantity)
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product;

